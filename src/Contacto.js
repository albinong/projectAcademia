// Contacto.js

import React, { useState, useEffect } from 'react'; // Importa os hooks necess√°rios do React
import './App.css'; //Importa o App.css
import alunos6 from './assets/alunos6.jpg'; // Importa a imagem "alunos6.jpg" do diret√≥rio de assets
import { Link } from 'react-router-dom'; // Importa o componente Link para criar links entre p√°ginas
import Select from 'react-select';//a biblioteca react-select para criar um seletor personalizado com os c√≥digos de pa√≠s



function Contacto() {
    // Define o estado inicial para os dados do formul√°rio e erros do formul√°rio
    const [formData, setFormData] = useState({
        name: '',
        email: '',
        subject: '',
        areaOfInterest: '',
        contactMethod: '',
        phoneCode: '',
        phoneNumber: '',
        message: ''
    });

    const [formErrors, setFormErrors] = useState({
        name: '',
        email: '',
        subject: '',
        areaOfInterest: '',
        contactMethod: '',
        message: ''
    });

    // Fun√ß√£o para lidar com as mudan√ßas nos campos de entrada do formul√°rio
    const handleInputChange = (event) => {
        const { name, value } = event.target;
        setFormData({ ...formData, [name]: value });
    };

    // Fun√ß√£o para lidar com a mudan√ßa no seletor de c√≥digo de telefone
    const handlePhoneCodeChange = (selectedOption) => {
        setFormData({ ...formData, phoneCode: selectedOption });
    };

    // Fun√ß√£o para validar o formul√°rio
    const validateForm = () => {
        let errors = {};
        let formIsValid = true;

        if (!formData.name) {
            formIsValid = false;
            errors.name = 'Por favor, insira seu nome.';
        }

        if (!formData.email) {
            formIsValid = false;
            errors.email = 'Por favor, insira seu endere√ßo de e-mail.';
        } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
            formIsValid = false;
            errors.email = 'Endere√ßo de e-mail inv√°lido.';
        }

        if (!formData.subject) {
            formIsValid = false;
            errors.subject = 'Por favor, insira o assunto.';
        }

        if (!formData.areaOfInterest) {
            formIsValid = false;
            errors.areaOfInterest = 'Por favor, selecione uma √°rea de interesse.';
        }

        if (!formData.contactMethod) {
            formIsValid = false;
            errors.contactMethod = 'Por favor, selecione um m√©todo de contato preferido.';
        }

        if (!formData.message) {
            formIsValid = false;
            errors.message = 'Por favor, insira sua mensagem.';
        }

        setFormErrors(errors);
        return formIsValid;
    };

    // Fun√ß√£o para lidar com o envio do formul√°rio
    const handleSubmit = (event) => {
        event.preventDefault();  // Previne o comportamento padr√£o de envio do formul√°rio
        if (validateForm()) { // Verifica se o formul√°rio √© v√°lido
            // Armazenar os dados no localStorage
            localStorage.setItem('formData', JSON.stringify(formData));
            // Exibir os alertas
            window.alert(`${formData.name} Brevemente entraremos em contacto contigo. AT√â J√Å! üòä`);
            window.alert('Os seus dados est√£o armazenados em um armazenamento local.');
            // Limpar os campos ap√≥s o envio bem-sucedido
            setFormData({
                name: '',
                email: '',
                subject: '',
                areaOfInterest: '',
                contactMethod: '',
                phoneCode: '',
                phoneNumber: '',
                message: ''
            });
        } else {
            console.log('Formul√°rio inv√°lido. Por favor, corrija os erros.');
            window.alert('Formul√°rio inv√°lido. Por favor, corrija os erros.');

        }
    };

    const [userLocation, setUserLocation] = useState(null);  // Definindo a vari√°vel userLocation e inicializando com useState
    // Obt√©m a localiza√ß√£o atual do usu√°rio
    useEffect(() => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                setUserLocation({
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude
                });
            });
        } else {
            setUserLocation(null);
        }
    }, []);



    return (
        <div className="headerfoto">
            <img src={alunos6} alt="Alunos6" /> {/* Insere a imagem "alunos6" com a descri√ß√£o "Alunos6" */}
            <header className="cont-header">Entre em contacto preenchendo os campos a baixo</header> {/* Cabe√ßalho do formul√°rio */}
            <form className="formulario" action="#" method="post" onSubmit={handleSubmit}> {/* Formul√°rio com a classe "formulario" e fun√ß√£o de envio handleSubmit */}
                <label htmlFor="name"></label>
                <input type="text" id="name" name="name" placeholder='Digite o seu nome completo aqui' value={formData.name} onChange={handleInputChange} required />{/* Campo de entrada para o nome */}
                <div className="error-message">{formErrors.name}</div>{/* Exibe mensagens de erro para o campo de nome, se houver */}
                <Select
                    id="phoneCode"
                    placeholder='Selecione o indicativo o seu Pais'
                    value={formData.phoneCode}
                    onChange={handlePhoneCodeChange}
                    options={[
                        // Op√ß√µes para o seletor de c√≥digo de telefone
                        { value: 'us', label: '+1 - United States' },
                        { value: 'uk', label: '+44 - United Kingdom' },
                        { value: 'ao', label: '+244 - Angola' },
                        { value: 'br', label: '+55 - Brasil' },
                        { value: 'pt', label: '+351 - Portugal' },
                        { value: 'jp', label: '+81 - Jap√£o' },
                        { value: 'cn', label: '+86 - China' },
                        { value: 'ru', label: '+7 - R√∫ssia' },
                        { value: 'kp', label: '+850 - Coreia do Norte' },
                        { value: 'kr', label: '+82 - Coreia do Sul' },
                        { value: 'na', label: '+264 - Nam√≠bia' },
                        { value: 'fr', label: '+33 - Fran√ßa' },
                        { value: 'dz', label: '+213 - Arg√©lia' },
                        { value: 'ar', label: '+54 - Argentina' },
                        { value: 'gn', label: '+224 - Guin√©' },
                        { value: 'mz', label: '+258 - Mo√ßambique' },
                        { value: 'es', label: '+34 - Espanha' },
                        { value: 'bo', label: '+591 - Bol√≠via' },
                        { value: 'zw', label: '+263 - Zimb√°bue' },
                        { value: 'ng', label: '+234 - Nig√©ria' },
                        { value: 'au', label: '+61 - Austr√°lia' },
                        { value: 'ca', label: '+1 - Canad√°' },
                        { value: 'de', label: '+49 - Alemanha' },
                        { value: 'in', label: '+91 - √çndia' },
                        { value: 'it', label: '+39 - It√°lia' },
                        { value: 'mx', label: '+52 - M√©xico' },
                        { value: 'nz', label: '+64 - Nova Zel√¢ndia' },
                        { value: 'sa', label: '+966 - Ar√°bia Saudita' },
                        { value: 'za', label: '+27 - √Åfrica do Sul' },
                        { value: 'ch', label: '+41 - Su√≠√ßa' },
                        { value: 'tr', label: '+90 - Turquia' },
                        { value: 'ae', label: '+971 - Emirados √Årabes Unidos' },
                        { value: 'se', label: '+46 - Su√©cia' },
                        { value: 'fi', label: '+358 - Finl√¢ndia' }
                    ]}
                />  {/* Seletor personalizado para o c√≥digo de telefone com as op√ß√µes de pa√≠ses */}
                <label htmlFor="phoneNumber"></label>
                <input
                    type="text"
                    id="phoneNumber"
                    name="phoneNumber"
                    placeholder='Depois de teres selecionado o indicativo, digite aqui o seu contacto'
                    value={formData.phoneNumber}
                    onChange={handleInputChange}
                    required
                /> {/* Campo de entrada para o n√∫mero de telefone */}
                <div className="error-message">{formErrors.phoneNumber}</div>{/* Exibe mensagens de erro para o campo de n√∫mero de telefone, se houver */}
                <label htmlFor="email"></label>
                <label htmlFor="email"></label>
                <input type="email" id="email" name="email" placeholder='Digite o seu email' value={formData.email} onChange={handleInputChange} required /> {/* Campo de entrada para o endere√ßo de e-mail */}
                <div className="error-message">{formErrors.email}</div>{/* Exibe mensagens de erro para o campo de e-mail, se houver */}

                <label htmlFor="subject"></label>
                <input type="text" id="subject" name="subject" placeholder='Digite o assunto de forma resumida aqui' value={formData.subject} onChange={handleInputChange} required /> {/* Campo de entrada para o assunto */}
                <div className="error-message">{formErrors.subject}</div>  {/* Exibe mensagens de erro para o campo de assunto, se houver */}

                <label htmlFor="areaOfInterest"></label>
                <select id="areaOfInterest" name="areaOfInterest" value={formData.areaOfInterest} onChange={handleInputChange} required> {/* Seletor para a √°rea de interesse */}
                    <option value="" disabled>Selecione a √Årea de Interesse</option>
                    <option value="math">Matem√°tica</option>
                    <option value="science">Ci√™ncias</option>
                    <option value="language">L√≠nguas</option>
                    <option value="gnr">GNR</option>
                    <option value="police">Pol√≠cia Nacional</option>
                    <option value="troop">Tropa</option>
                    <option value="marines">Fuzileiros</option>
                </select>
                <div className="error-message">{formErrors.areaOfInterest}</div> {/* Exibe mensagens de erro para a √°rea de interesse, se houver */}

                <label htmlFor="contactMethod"></label>
                <select id="contactMethod" name="contactMethod" value={formData.contactMethod} onChange={handleInputChange} required> {/* Seletor para o m√©todo de contato preferido */}
                    <option value="" disabled>M√©todo de Contato Preferido</option>
                    <option value="email">E-mail</option>
                    <option value="phone">Telefone</option>
                </select>
                <div className="error-message">{formErrors.contactMethod}</div> {/* Exibe mensagens de erro para o m√©todo de contato preferido, se houver */}

                <label htmlFor="message"></label>
                <textarea id="message" name="message" placeholder='Digite a mensagem que deseja enviar-nos aqui' rows="4" value={formData.message} onChange={handleInputChange} required></textarea>{/* Campo de entrada para a mensagem */}
                <div className="error-message">{formErrors.message}</div> {/* Exibe mensagens de erro para o campo de mensagem, se houver */}

                <input type="submit" value="Enviar" /> {/* Bot√£o de envio do formul√°rio */}
            </form>
            <div>
                <p>Localiza√ß√£o</p> {/* Paragrafo para a se√ß√£o de localiza√ß√£o */}
                {userLocation ? (
                    <p>Latitude: {userLocation.latitude} Longitude: {userLocation.longitude}</p> // Exibe a latitude e longitude se dispon√≠vel
                ) : (
                    <p>Localiza√ß√£o n√£o dispon√≠vel</p> // Exibe uma mensagem se a localiza√ß√£o n√£o estiver dispon√≠vel
                )}
            </div>
            {/* Bot√£o de voltar */}
            <div className="back-button">
                <Link to="/" style={{ textDecoration: 'none', color: 'white' }}>VOLTAR</Link>{/* Cria um link para voltar √† p√°gina inicial */}
            </div>
        </div>
    );
}

export default Contacto;  // Exporta o componente "Contacto" para uso em outros lugares